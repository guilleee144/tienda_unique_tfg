package com.example.uniqueartifacts.viewmodel

import androidx.compose.runtime.State
import androidx.compose.runtime.mutableStateOf
import androidx.lifecycle.ViewModel
import com.example.uniqueartifacts.views.Producto
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.flow.map
import kotlinx.coroutines.flow.stateIn
import kotlinx.coroutines.flow.SharingStarted
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import androidx.lifecycle.viewModelScope

class CarritoViewModel : ViewModel() {

    private val _productosEnCarrito = MutableStateFlow<List<Producto>>(emptyList())
    val productosEnCarrito = _productosEnCarrito

    val totalProductos: StateFlow<Int> = productosEnCarrito
        .map { it.size }
        .stateIn(viewModelScope, SharingStarted.Eagerly, 0)

    fun agregarAlCarrito(producto: Producto) {
        val listaActual = _productosEnCarrito.value.toMutableList()
        listaActual.add(producto)
        _productosEnCarrito.value = listaActual
    }

    fun obtenerCantidadTotal(): Int {
        return _productosEnCarrito.value.size
    }

    fun obtenerPrecioTotal(): String {
        val total = _productosEnCarrito.value.sumOf {
            it.precio.replace(",", ".").replace("â‚¬", "").toDoubleOrNull() ?: 0.0
        }
        return String.format("%.2f", total).replace(".", ",")
    }
}

